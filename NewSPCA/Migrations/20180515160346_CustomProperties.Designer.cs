// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NewSPCA.Data;
using NewSPCA.Models;
using System;

namespace NewSPCA.Migrations
{
    [DbContext(typeof(AnimalContext))]
    [Migration("20180515160346_CustomProperties")]
    partial class CustomProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewSPCA.Models.Animal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Age")
                        .HasMaxLength(25);

                    b.Property<int>("BreedID");

                    b.Property<string>("Color")
                        .HasMaxLength(25);

                    b.Property<int>("Declawed");

                    b.Property<int>("Gender");

                    b.Property<int>("Housebroken");

                    b.Property<DateTime>("Intake_Date");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("SiteID");

                    b.Property<int>("Size");

                    b.Property<int>("Spayed_Neutered");

                    b.Property<int>("SpeciesID");

                    b.HasKey("ID");

                    b.HasIndex("BreedID");

                    b.HasIndex("SiteID");

                    b.HasIndex("SpeciesID");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("NewSPCA.Models.Breed", b =>
                {
                    b.Property<int>("BreedID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Breed_Name")
                        .HasMaxLength(50);

                    b.HasKey("BreedID");

                    b.ToTable("Breed");
                });

            modelBuilder.Entity("NewSPCA.Models.Site", b =>
                {
                    b.Property<int>("SiteID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Site_Address")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Site_Name")
                        .IsRequired();

                    b.HasKey("SiteID");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("NewSPCA.Models.Species", b =>
                {
                    b.Property<int>("SpeciesID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Species_Name")
                        .HasMaxLength(50);

                    b.HasKey("SpeciesID");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("NewSPCA.Models.Animal", b =>
                {
                    b.HasOne("NewSPCA.Models.Breed", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NewSPCA.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NewSPCA.Models.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
